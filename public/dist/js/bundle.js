!function(g){function I(A){if(C[A])return C[A].exports;var n=C[A]={exports:{},id:A,loaded:!1};return g[A].call(n.exports,n,n.exports,I),n.loaded=!0,n.exports}var C={};return I.m=g,I.c=C,I.p="",I(0)}([function(module,exports,__webpack_require__){eval("var TreeMap = __webpack_require__(1);\n\n(function() {\n    'use strict';\n\n\n    var treeMap = new TreeMap();\n    treeMap.load('/api/lakes/currentLevels');\n}());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wdWJsaWMvc3JjL2pzL2luZGV4LmpzPzI4YTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBRUE7QUFDQTs7O0FBR0E7QUFDQTtBQUNBLENBQUMiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBUcmVlTWFwID0gcmVxdWlyZSgnLi90cmVlbWFwJyk7XG5cbihmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cblxuICAgIHZhciB0cmVlTWFwID0gbmV3IFRyZWVNYXAoKTtcbiAgICB0cmVlTWFwLmxvYWQoJy9hcGkvbGFrZXMvY3VycmVudExldmVscycpO1xufSgpKTtcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9wdWJsaWMvc3JjL2pzL2luZGV4LmpzXG4gKiogbW9kdWxlIGlkID0gMFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("module.exports = (function() {\n    'use strict';\n\n    var BigChart = __webpack_require__(2);\n\n    function TreeMap() {\n      this.bigChart = null;\n\n        this.width = window.innerWidth - 200;\n        this.headerHeight = parseInt(d3.select('#header').style('height'));\n        this.padding = parseInt(d3.select('#background').style('padding-top'));\n        this.padding += parseInt(d3.select('#background').style('padding-bottom'));\n        this.height = window.innerHeight - this.headerHeight - this.padding;\n\n        this.treemap = d3.layout.treemap()\n            .size([this.width, this.height])\n            .sticky(true)\n            .value(function(d) {\n                return d.capacity;\n            });\n\n        this.div = d3.select('#chart')\n            .style('width', this.width + 'px')\n            .style('height', this.height + 'px');\n\n        this.node = null;\n\n        var self = this;\n        d3.select(window).on('resize', function() {\n            self.redraw.apply(self);\n        });\n    }\n\n    TreeMap.prototype.load = function(path) {\n        // Load data\n        this.data = [];\n        var self = this;\n        d3.json(path, function(err, d) {\n            if (err) console.log(err);\n\n            // Do not need overall sytem storage level\n            self.data = d.filter(function(d) {\n                return d.name !== 'System';\n            });\n\n            self.data = {\n                children: self.data\n            };\n\n            self._draw();\n\n        });\n    };\n\n\n    TreeMap.prototype.redraw = function() {\n        this.width = window.innerWidth - 200;\n        this.headerHeight = parseInt(d3.select('#header').style('height'));\n        this.padding = parseInt(d3.select('#background').style('padding-top'));\n        this.padding += parseInt(d3.select('#background').style('padding-bottom'));\n        this.height = window.innerHeight - this.headerHeight - this.padding;\n\n        d3.select('#chart')\n            .style('width', this.width + 'px')\n            .style('height', this.height + 'px');\n\n        this.treemap.size([this.width, this.height]);\n\n        d3.selectAll('.node')\n            .data(this.treemap.nodes)\n            .call(position)\n            .select('.lake-text')\n            .style('font-size', function(d) {\n                return fontSize(d.dx, d.dy);\n            });\n\n        d3.selectAll('.node')\n            .data(this.treemap.nodes)\n            .select('.internal-graph')\n            .call(internalGraph);\n\n        if (this.bigChart) this.bigChart.redraw(this.width, this.height);\n    };\n\n    TreeMap.prototype._draw = function() {\n        var self = this;\n        this.treemap.size([this.width, this.height]);\n\n        this.node = this.div.datum(this.data).selectAll('.node')\n            .data(this.treemap.nodes)\n            .enter().append('div')\n            .attr('class', function(d) {\n                /*** Add in additional data properties. ***/\n                d.percentFull = d.currentLevel / d.capacity;\n                /***/\n                return 'node';\n            })\n            .on('mouseover', function(d) {\n                var e = d3.select(this);\n                e.style('width', function(d) {\n                    return d.dxLarge + 'px';\n                });\n                e.style('left', function(d) {\n                    return (d.x - (d.dxLarge - d.dx) / 2) + 'px';\n                });\n                e.style('height', function(d) {\n                    return d.dyLarge + 'px';\n                });\n                e.style('top', function(d) {\n                    return (d.y - (d.dyLarge - d.dy) / 2) + 'px';\n                });\n\n                e.classed('node-shadow', true);\n\n                e.select('.lake-text').style('font-size', function(d) {\n                    return fontSize(d.dxLarge, d.dyLarge);\n                });\n\n                e.select('.internal-graph')\n                    .style('height', function(d) {\n                        return d.dyLarge * (d.percentFull) + 'px';\n                    })\n                    .style('margin-top', function(d) {\n                        return d.dyLarge * (1 - (d.percentFull)) + 1 + 'px';\n                    });\n            })\n            .on('mouseout', function(d) {\n                var e = d3.select(this);\n                e.call(position);\n                e.classed('node-shadow', false);\n                e.select('.lake-text').style('font-size', function(d) {\n                    return fontSize(d.dx, d.dy);\n                });\n                e.select('.internal-graph')\n                    .style('height', function(d) {\n                        return d.dy * (d.percentFull) + 'px';\n                    })\n                    .style('margin-top', function(d) {\n                        return d.dy * (1 - (d.percentFull)) + 1 + 'px';\n                    });\n            })\n            .on('click', function(d) {\n                // Disable clicking any other nodes\n                self.div.selectAll('.node')\n                  .style('pointer-events', 'none');\n\n                self.bigChart = new BigChart(self.div, d.name, d.capacity);\n                self.bigChart.loadData(\n                    // Graph ready callback\n                    function() {\n                        // Hide all nodes in the treemap chart\n                        self.div.selectAll('.node')\n                          .classed('visible', false)\n                          .classed('hidden', true);\n                    },\n                    // Close callback\n                    function() {\n                        self.div.selectAll('.node')\n                          .classed('hidden', false)\n                          .classed('visible', true)\n                          .style('pointer-events', 'auto');\n                        self.bigChart = null;\n                    });\n            })\n            .call(position);\n\n        this.node.append('div')\n            .attr('class', 'lake-name')\n            .append('span')\n            .attr('class', 'lake-text')\n            .html(function(d) {\n                if (!d.hasOwnProperty('name')) return;\n                return d.name + '<br/>' + Math.round(d.percentFull * 1000) / 10 + '%<br/>' + Math.round(d.currentLevel) + 'GWh';\n            })\n            .style('font-size', function(d) {\n                return fontSize(d.dx, d.dy);\n            });\n\n        this.node.append('div')\n            .attr('class', 'internal-graph')\n            .call(internalGraph);\n    };\n\n    var position = function() {\n        /*jshint -W040*/\n        this.style('left', function(d) {\n                return d.x + 'px';\n            })\n            .style('top', function(d) {\n                return d.y + 'px';\n            })\n            .style('width', function(d) {\n                // dxLarge is the zoomed height\n                d.dxLarge = d.dx * 1.1 > 200 ? d.dx * 1.1 : 200;\n                return Math.max(0, d.dx - 1) + 'px';\n            })\n            .style('height', function(d) {\n                // dyLarge is the zoomed width\n                d.dyLarge = d.dy * 1.1 > 200 ? d.dy * 1.1 : 200;\n                return Math.max(0, d.dy - 1) + 'px';\n            });\n    };\n\n    var fontSize = function(width, height) {\n        return Math.max(14, 0.06 * Math.sqrt(width * height)) + 'px';\n    };\n\n    var internalGraph = function() {\n        /*jshint -W040*/\n        this.style('height', function(d) {\n                return d.dy * (d.percentFull) + 'px';\n            })\n            .style('margin-top', function(d) {\n                return d.dy * (1 - (d.percentFull)) + 'px';\n            });\n    };\n\n\n    return TreeMap;\n\n}());\n//# sourceMappingURL=data:application/json;base64,")},function(module,exports){eval("module.exports = (function() {\n  'use strict';\n    // var d3 = require('d3');\n\n    function BigChart(rootElement, name, capacity) {\n        this.rootElement = rootElement;\n        this.name = name;\n        this.capacity = capacity;\n        this.data = [];\n    }\n\n    BigChart.prototype.loadData = function(callbackReady, callbackClose) {\n        var self = this;\n        this.callbackClose = callbackClose;\n        // Get lake levels\n        d3.json('/api/lakes/levels/' + encodeURIComponent(this.name), function(err, data) {\n            self.data = data;\n            self.createChart();\n            callbackReady();\n        });\n    };\n\n    BigChart.prototype.createChart = function() {\n        var self = this;\n        // Check the number of arguments are ok. Either zero or two.\n        if (arguments.length !== 0 && arguments.length !== 2)\n        {\n          throw new Error(\"Invalid number of arguments. Expected zero or two.\");\n        }\n\n        var width = 0, height = 0;\n        if (arguments.length === 0) {\n          width = this.rootElement.style('width');\n          height = this.rootElement.style('height');\n        } else {\n          width = arguments[0];\n          height = arguments[1];\n        }\n\n        this.rootElement.append('div')\n            .attr('id', 'bigchart')\n            .style('width', width)\n            .style('height', height);\n\n        var margin = 50;\n        var chartWidth = parseInt(width) - 2 * margin;\n        var chartHeight = parseInt(height) - 2 * margin;\n\n        var xScale = d3.time.scale()\n            .range([0, parseInt(chartWidth)])\n            .domain(d3.extent(this.data, function(d) {\n                return new Date(d.date);\n            }));\n\n        var yScale = d3.scale.linear()\n            .range([parseInt(chartHeight), 0])\n            .domain([0, 100]);\n\n        var xAxis = d3.svg.axis()\n            .scale(xScale)\n            .orient('bottom');\n\n        var yAxis = d3.svg.axis()\n            .scale(yScale)\n            .orient('left');\n\n        var svg = d3.select('#bigchart')\n            .append('svg')\n            .attr('width', parseInt(width))\n            .attr('height', parseInt(height))\n            .append('g')\n            .attr('transform', 'translate(' + margin + ', ' + margin + ')');\n\n        var gradient = svg.append('defs')\n            .append('linearGradient')\n            .attr('id', 'blueGradient')\n            .attr('x1', '0')\n            .attr('x2', '0')\n            .attr('y1', '0')\n            .attr('y2', '1');\n\n        gradient.append('stop')\n            .attr('offset', '0%')\n            .attr('stop-color', 'rgba(147, 206, 222, 1)');\n\n        gradient.append('stop')\n            .attr('offset', '41%')\n            .attr('stop-color', 'rgba(117, 189, 209, 1)');\n\n        gradient.append('stop')\n            .attr('offset', '100%')\n            .attr('stop-color', 'rgba(73, 165, 191, 1)');\n\n        var area = d3.svg.area()\n            .x(function(d) {\n                return xScale(new Date(d.date));\n            })\n            .y0(parseInt(chartHeight))\n            .y1(function(d) {\n                return yScale(d.level / self.capacity * 100);\n            });\n\n        svg.append('path')\n            .datum(this.data)\n            .attr('class', 'lake-levels-area')\n            .attr('d', area);\n\n        svg.append('g')\n            .call(xAxis)\n            .attr('class', 'axis')\n            .attr('transform', 'translate(0, ' + chartHeight + ')');\n\n        svg.append('g')\n            .attr('class', 'axis')\n            .call(yAxis)\n            .append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', 10)\n            .attr('dy', '0.7em')\n            .style('text-anchor', 'end')\n            .text('Dam level (%)');\n\n        svg.append('text')\n            .attr('transform', 'translate(' + chartWidth / 2 + ', 0)')\n            .style('text-anchor', 'middle')\n            .attr('font-size', '1.5em')\n            .text(this.name);\n\n        svg.append('text')\n            .attr('transform', 'translate(' + (chartWidth - 50) + ', 0)')\n            .style('text-anchor', 'right')\n            .style('cursor', 'pointer')\n            .text('Close')\n            .on('click', function(d) {\n                self.rootElement.select('#bigchart')\n                    .remove();\n                self.callbackClose();\n            });\n\n    };\n\n    BigChart.prototype.removeChart = function() {\n        this.rootElement.select('#bigchart')\n            .remove();\n    };\n\n    BigChart.prototype.redraw = function(targetWidth, targetHeight) {\n      // Redraws the chart by removing it and creating a new one.\n      // Note that we cannot just read the width and height sytle properties\n      // as they are changing due to CSS transforms. We must pass the final\n      // values to the drawing function manually. Unfortunately we don't get\n      // a nice animation this way....\n\n      this.removeChart();\n      this.createChart(targetWidth, targetHeight);\n    };\n\n    return BigChart;\n\n}());\n//# sourceMappingURL=data:application/json;base64,");
}]);